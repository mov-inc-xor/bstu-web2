{"version":3,"sources":["hooks/useDesk.ts","components/Task.tsx","components/List.tsx","pages/IndexPage.tsx","reportWebVitals.ts","pages/SignIn.tsx","pages/RegisterPage.tsx","index.tsx"],"names":["Task","_text","_id","_title","this","uuidv4","makeTitle","text","title","split","slice","length","join","replaceAll","List","_color","items","colors","Math","floor","random","Array","defaultHeaderColor","desk","task","className","onClick","performTask","id","icon","faCheckCircle","list","editable","titleRef","useRef","ref","onBlur","current","contentEditable","blur","renameModeOff","style","backgroundColor","color","focus","renameModeOn","faPen","removeList","faTrash","droppableId","provided","snapshot","droppableProps","innerRef","map","i","draggableId","index","draggableProps","dragHandleProps","placeholder","IndexPage","useState","newTaskText","setNewTaskText","setDesk","useEffect","addList","prev","randomHeaderColor","filter","addTask","firstList","concat","moveTask","srcListId","destListId","srcTaskIndex","destTaskIndex","newDesk","srcList","find","destList","splice","forEach","push","useDesk","display","justifyContent","margin","to","faSignOutAlt","type","value","onChange","e","target","faPlus","onDragEnd","result","console","log","destination","source","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SignIn","htmlFor","RegisterPage","ReactDOM","render","StrictMode","basename","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.d80bcab0.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nclass Task {\n  private _id: string\n  private _title: string\n\n  constructor(private _text: string) {\n    this._id = uuidv4()\n    this._title = this.makeTitle(_text)\n  }\n\n  private makeTitle(text: string) {\n    let title = text.split(' ').slice(0, 3)\n    if (title[title.length - 1].length < 3) {\n      title = title.slice(0, 2)\n    }\n    return title.join(' ').replaceAll(/[^А-ЯЁа-яёA-Za-z0-9\\s]/g, '')\n  }\n\n  public get id() {\n    return this._id\n  }\n\n  public get title() {\n    return this._title\n  }\n\n  public get text() {\n    return this._text\n  }\n}\n\nclass List extends Array<Task> {\n  private _id: string\n  public static defaultHeaderColor = '#e5ebf5'\n\n  constructor(private _title: string, private _color: string, ...items: Task[]) {\n    super(...items)\n    this._id = uuidv4()\n  }\n\n  public static randomHeaderColor() {\n    const colors = [\n      '#caedd2',\n      'rgb(237 207 202)',\n      'rgb(255, 236, 170)',\n      'rgb(202 231 237)',\n      'rgb(204 202 237)',\n      'rgb(237 202 234)',\n      'rgb(237 202 202)',\n    ]\n    const index = Math.floor(Math.random() * colors.length)\n    return colors[index]\n  }\n\n  public get color() {\n    return this._color\n  }\n\n  public get id() {\n    return this._id\n  }\n\n  public get title() {\n    return this._title\n  }\n\n  public set title(title: string) {\n    this.title = title\n  }\n}\n\nexport type Desk = List[]\n\nexport type UseDeskReturnType = {\n  desk: Desk\n  addList: () => void\n  removeList: (id: string) => void\n  addTask: (text: string) => void\n  performTask: (id: string) => void\n  moveTask: (srcListId: string, destListId: string, srcTaskIndex: number, destTaskIndex: number) => void\n}\n\nconst useDesk = (): UseDeskReturnType => {\n  const [desk, setDesk] = useState<Desk>([])\n\n  useEffect(() => {\n    setDesk([\n      new List(\n        'Нераспределённые',\n        List.defaultHeaderColor,\n        ...[new Task('Сделать канбан доску быстро бесплатно и без смс'), new Task('Сделать лабораторки по WEB'), new Task('Тут фантазия кончилась, к сожалению')]\n      ),\n    ])\n  }, [])\n\n  const addList = () => {\n    setDesk((prev) => [...prev, new List('Новый список', List.randomHeaderColor())])\n  }\n\n  const removeList = (id: string) => {\n    setDesk((prev) => [...prev.filter((list) => list.id !== id)])\n  }\n\n  const moveTask = (srcListId: string, destListId: string, srcTaskIndex: number, destTaskIndex: number) => {\n    setDesk((prev) => {\n      const newDesk: Desk = []\n      const srcList = desk.find((list) => list.id === srcListId)!\n      const destList = desk.find((list) => list.id === destListId)!\n\n      const task = srcList.splice(srcTaskIndex, 1)[0]\n\n      destList.splice(destTaskIndex, 0, task)\n\n      prev.forEach((list) => {\n        if (list.id === srcListId) {\n          newDesk.push(srcList)\n          return\n        }\n\n        if (list.id === destListId) {\n          newDesk.push(destList)\n          return\n        }\n\n        newDesk.push(list)\n      })\n\n      return newDesk\n    })\n  }\n\n  const addTask = (text: string) => {\n    setDesk((prev) => {\n      const firstList = prev[0]\n      return [new List(firstList.title, firstList.color, ...firstList.concat(new Task(text))), ...prev.slice(1)]\n    })\n  }\n\n  const performTask = (id: string) => {\n    setDesk((prev) => [...prev.map((list) => new List(list.title, list.color, ...list.filter((task) => task.id !== id)))])\n  }\n\n  return {\n    desk,\n    addList,\n    removeList,\n    addTask,\n    performTask,\n    moveTask,\n  }\n}\n\nexport { useDesk, Task, List }\n","import { faCheckCircle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Task as TaskModel, UseDeskReturnType } from '../hooks/useDesk'\n\ntype TaskType = {\n  desk: UseDeskReturnType\n  task: TaskModel\n}\n\nconst Task = ({ desk, task }: TaskType) => {\n  return (\n    <div className=\"list__card\">\n      <header className=\"card__header\">\n        <span>{task.title}</span>\n        <button onClick={() => desk.performTask(task.id)} className=\"btn btn_inline-green\">\n          <FontAwesomeIcon icon={faCheckCircle} />\n        </button>\n      </header>\n      <main className=\"card__main\">{task.text}</main>\n    </div>\n  )\n}\n\nexport { Task }\n","import { faPen, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useRef } from 'react'\nimport { List as ListModel, UseDeskReturnType } from '../hooks/useDesk'\nimport { Task } from './Task'\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\n\ntype ListType = {\n  desk: UseDeskReturnType\n  list: ListModel\n  editable?: boolean\n}\n\nconst List = ({ desk, list, editable = true }: ListType) => {\n  const titleRef = useRef<HTMLSpanElement>(null)\n\n  const renameModeOn = () => {\n    const current = titleRef.current!\n    current.contentEditable = 'true'\n    current.focus()\n  }\n\n  const renameModeOff = () => {\n    const current = titleRef.current!\n    current.contentEditable = 'false'\n    current.blur()\n  }\n\n  return (\n    <div className=\"desk__list\">\n      <header className=\"list__header\">\n        <span ref={titleRef} onBlur={() => renameModeOff()} className=\"header__title\" style={{ backgroundColor: list.color }}>\n          {list.title}\n        </span>\n        <div className=\"header__btn-container\">\n          {editable && (\n            <>\n              <button onClick={() => renameModeOn()} className=\"btn btn_inline-gray\">\n                <FontAwesomeIcon icon={faPen} />\n              </button>\n\n              <button onClick={() => desk.removeList(list.id)} className=\"btn btn_inline-red\">\n                <FontAwesomeIcon icon={faTrash} />\n              </button>\n            </>\n          )}\n        </div>\n      </header>\n\n      <Droppable droppableId={list.id}>\n        {/* <main className=\"list__main\"> */}\n\n        {(provided, snapshot) => (\n          <main\n            className=\"list__main\"\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            // style={getListStyle(snapshot.isDraggingOver)}\n          >\n            {list.map((task, i) => (\n              <Draggable key={task.id} draggableId={task.id} index={i}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    // style={getItemStyle(\n                    //   snapshot.isDragging,\n                    //   provided.draggableProps.style\n                    // )}\n                  >\n                    <Task desk={desk} task={task} />\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </main>\n        )}\n\n        {/* </main> */}\n      </Droppable>\n    </div>\n  )\n}\n\nexport { List }\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt, faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom'\nimport { useDesk } from '../hooks/useDesk'\nimport { useState } from 'react'\nimport { List } from '../components/List'\nimport { DropResult, DragDropContext } from 'react-beautiful-dnd'\n\nconst IndexPage = () => {\n  const [newTaskText, setNewTaskText] = useState<string>('')\n  const desk = useDesk()\n\n  const addTask = () => {\n    if (!newTaskText) {\n      return\n    }\n    desk.addTask(newTaskText)\n    setNewTaskText('')\n  }\n\n  const onDragEnd = (result: DropResult) => {\n    console.log(result)\n    if (!result.destination) {\n      return\n    }\n    const srcListId = result.source.droppableId\n    const destListId = result.destination.droppableId\n    const srcTaskIndex = result.source.index\n    const destTaskIndex = result.destination.index\n\n    desk.moveTask(srcListId, destListId, srcTaskIndex, destTaskIndex)\n  }\n\n  return (\n    <>\n      <header className=\"header\">\n        <div style={{ display: 'flex', justifyContent: 'space-between', margin: '20px' }}>\n          <div className=\"header__logo\">Канбан-доска</div>\n          <div className=\"header__user\">\n            <span>Илья Артёменко</span>\n            <Link to=\"/signin\">\n              <FontAwesomeIcon icon={faSignOutAlt} />\n            </Link>\n          </div>\n        </div>\n\n        <div className=\"add-task-panel\" style={{ margin: '20px' }}>\n          <input type=\"text\" placeholder=\"Что сделать?\" className=\"input-text\" value={newTaskText} onChange={(e) => setNewTaskText(e.target.value)} />\n          <button onClick={() => addTask()} className=\"btn btn_colored btn_active\">\n            <FontAwesomeIcon icon={faPlus} />\n          </button>\n        </div>\n      </header>\n      <main className=\"main\">\n        <div className=\"desk\">\n          <DragDropContext onDragEnd={onDragEnd}>\n            {desk.desk[0] && <List key={desk.desk[0].id} desk={desk} list={desk.desk[0]} editable={false} />}\n\n            {desk.desk.slice(1).map((list) => (\n              <List key={list.id} desk={desk} list={list} />\n            ))}\n          </DragDropContext>\n\n          <div className=\"add-list-container\">\n            <button onClick={() => desk.addList()} className=\"btn btn_colored btn_gray btn_fullwidth\">\n              <FontAwesomeIcon icon={faPlus} /> Новый список\n            </button>\n          </div>\n        </div>\n      </main>\n    </>\n  )\n}\n\nexport { IndexPage }\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Link } from 'react-router-dom'\n\nconst SignIn = () => {\n  return (\n    <div className=\"center-container\">\n      <h1>Авторизация</h1>\n      <form>\n        <label htmlFor=\"email\">E-Mail:</label>\n        <input type=\"text\" className=\"input-text mb20\" />\n\n        <label htmlFor=\"password\">Пароль:</label>\n        <input type=\"password\" className=\"input-text mb20\" />\n\n        <div className=\"center-container__bottom-controls\">\n          <input type=\"submit\" value=\"Войти\" className=\"btn btn_colored btn_active\" />\n          <span>\n            или <Link to=\"/register\">Зарегистрироваться</Link>\n          </span>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport { SignIn }\n","import { Link } from 'react-router-dom'\n\nconst RegisterPage = () => {\n  return (\n    <div className=\"center-container\">\n      <h1>Регистрация</h1>\n      <form>\n        <label htmlFor=\"email\">E-Mail:</label>\n        <input type=\"text\" className=\"input-text mb20\" />\n\n        <label htmlFor=\"password\">Пароль:</label>\n        <input type=\"password\" className=\"input-text mb20\" />\n\n        <label htmlFor=\"password\">Повторите пароль:</label>\n        <input type=\"password\" className=\"input-text mb20\" />\n\n        <div className=\"center-container__bottom-controls\">\n          <input type=\"submit\" value=\"Зарегистрироваться\" className=\"btn btn_colored btn_active\" />\n          <span>\n            или <Link to=\"/signin\">Войти</Link>\n          </span>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport { RegisterPage }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport { IndexPage } from './pages/IndexPage'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport { SignIn } from './pages/SignIn'\nimport { RegisterPage } from './pages/RegisterPage'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/bstu-web2\">\n      <Routes>\n        <Route path=\"/\" element={<IndexPage />} />\n        <Route path=\"/signin\" element={<SignIn />} />\n        <Route path=\"/register\" element={<RegisterPage />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}